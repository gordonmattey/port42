package main

// CommandTemplates provides structured templates for common command patterns
var CommandTemplates = map[string]string{
	"git-transform": `#!/bin/bash
# Generated by Port 42 - {{.Timestamp}}
# Purpose: {{.Description}}
# AI Guide: {{.AIGuide}}

# Usage: {{.CommandName}} [options]
USAGE="Usage: {{.CommandName}} [options]
{{.UsageHelp}}"

# Default values
LIMIT=10

# Parse command line options
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      echo "$USAGE"
      exit 0
      ;;
    -n|--number)
      LIMIT="$2"
      shift 2
      ;;
    *)
      echo "Unknown option: $1"
      echo "$USAGE"
      exit 1
      ;;
  esac
done

# Main logic
{{.Implementation}}

# Port 42 telemetry
echo "[$(date)] {{.CommandName}} executed" >> ~/.port42/usage.log
`,

	"filter-transform": `#!/bin/bash
# Generated by Port 42 - {{.Timestamp}}
# Purpose: {{.Description}}

# The transformation
{{.Implementation}}
`,

	"python-cli": `#!/usr/bin/env python3
# Generated by Port 42 - {{.Timestamp}}
# Purpose: {{.Description}}

import sys
import argparse

def main():
    parser = argparse.ArgumentParser(description='{{.Description}}')
    {{.ArgparseSetup}}
    args = parser.parse_args()
    
    {{.Implementation}}

if __name__ == '__main__':
    main()
`,
}

// TemplateHints provides guidance for the AI when generating commands
var TemplateHints = map[string]string{
	"git-commands": `When creating git-related commands:
1. Always check if we're in a git repository first
2. Use 'git' subprocess calls, don't try to parse .git directory
3. Handle common edge cases (no commits, detached HEAD, etc.)
4. Provide helpful error messages
5. Consider adding options like --limit, --format, etc.`,
	
	"text-processing": `When processing text:
1. Handle both stdin and file arguments
2. Consider streaming for large inputs
3. Add useful options (--verbose, --quiet, --color)
4. Validate inputs appropriately`,
	
	"haiku-specific": `For the git-haiku command specifically:
1. Get commits using: git log --oneline -n <limit>
2. Transform each commit into 3 lines
3. Consider syllable counting if attempting true haikus
4. Add color for visual appeal
5. Format output beautifully`,
}