#!/bin/bash
# Generated by Port 42 - 2025-07-19 05:06:02
# Display git commits formatted as haikus (5-7-5 syllable structure)

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "Error: Not in a git repository" >&2
    exit 1
fi

# Function to format text into haiku-like structure
format_as_haiku() {
    local commit_hash="$1"
    local commit_msg="$2"
    
    # Convert to lowercase and split into words (macOS compatible)
    local lower_msg=$(echo "$commit_msg" | tr '[:upper:]' '[:lower:]')
    local words=($lower_msg)
    local total_words=${#words[@]}
    
    if [ $total_words -eq 0 ]; then
        return
    fi
    
    # Distribute words across three lines (roughly 5-7-5 syllable pattern)
    # Using word count as a proxy for syllables
    local line1=""
    local line2=""
    local line3=""
    
    # Calculate word distribution
    local words_per_line=$((total_words / 3))
    local remainder=$((total_words % 3))
    
    local line1_words=$words_per_line
    local line2_words=$words_per_line
    local line3_words=$words_per_line
    
    # Distribute remainder words to create 5-7-5 feel
    if [ $remainder -eq 2 ]; then
        line2_words=$((line2_words + 1))
        line3_words=$((line3_words + 1))
    elif [ $remainder -eq 1 ]; then
        line2_words=$((line2_words + 1))
    fi
    
    # Build lines
    local word_index=0
    
    # Line 1
    for ((i=0; i<line1_words && word_index<total_words; i++)); do
        line1="$line1 ${words[$word_index]}"
        ((word_index++))
    done
    
    # Line 2
    for ((i=0; i<line2_words && word_index<total_words; i++)); do
        line2="$line2 ${words[$word_index]}"
        ((word_index++))
    done
    
    # Line 3
    while [ $word_index -lt $total_words ]; do
        line3="$line3 ${words[$word_index]}"
        ((word_index++))
    done
    
    # Trim leading spaces and print
    line1="${line1# }"
    line2="${line2# }"
    line3="${line3# }"
    
    echo "  $line1"
    echo "    $line2"
    echo "  $line3"
    echo "      ~ $commit_hash"
    echo ""
}

# Get the last 10 commits
commit_count=0
while IFS= read -r line; do
    # Extract commit hash (first 7 characters) and message
    commit_hash="${line:0:7}"
    commit_msg="${line:8}"
    
    # Skip empty messages
    if [ -n "$commit_msg" ]; then
        format_as_haiku "$commit_hash" "$commit_msg"
        ((commit_count++))
    fi
done < <(git log --oneline -n 10 2>/dev/null)

if [ $commit_count -eq 0 ]; then
    echo "No commits found in this repository" >&2
    exit 1
fi